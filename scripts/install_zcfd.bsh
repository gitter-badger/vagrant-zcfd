#!/bin/bash

echo 'Building zCFD'

mkdir BUILD
pushd BUILD

# Clone the repo
if [ ! -d "zCFDSuperbuild" ]; then
	git clone https://github.com/zenotech/zCFDSuperbuild.git
else
	pushd zCFDSuperbuild
	git pull 
	popd
fi

# Checkout branch
pushd zCFDSuperbuild
git checkout master
popd

ZCFD_EXTRA_ARGS=""

ZCFD_PACKAGE_NAME="zCFD"

# Check for presence of CUDA compiler
CUDA_COMPILER=`which nvcc`
if [ -f "$CUDA_COMPILER" ]; then
	ZCFD_PACKAGE_NAME="zCFD-cuda"
fi

# Check for presence of Intel compiler
INTEL_COMPILER=`which icc`
if [ -f "$INTEL_COMPILER" ]; then
	ZCFD_PACKAGE_NAME="zCFD-icc"
	ZCFD_EXTRA_ARGS="-DINTEL_CC:BOOL=ON"

    # Should we build phi support
    MIC_INFO=`which micinfo`
    if [ -f "$MIC_INFO" ]; then
        ZCFD_PACKAGE_NAME="zCFD-icc-phi"
        ZCFD_EXTRA_ARGS="-DINTEL_CC:BOOL=ON;-DBUILD_PHI:BOOL=ON"
    fi
fi

# Build directory
mkdir ${ZCFD_PACKAGE_NAME}_build

# Build
pushd ${ZCFD_PACKAGE_NAME}_build
rm CMakeCache.txt

PREFIX=`pwd`/install
export PATH=$PREFIX/bin:$PATH
export LD_LIBRARY_PATH=$PREFIX/lib
export BOOST_ROOT=$PREFIX
export BZIP2_INCLUDE=`pwd`/install/include
export BZIP2_LIBPATH=`pwd`/install/lib

PV_EXTRA_ARGS="-DCMAKE_BUILD_TYPE:STRING=Release;-DPYTHON_EXECUTABLE:FILEPATH=${PREFIX}/bin/python;-DVTK_OPENGL_HAS_OSMESA:BOOL=ON;-DVTK_XDMF_USE_MPI:BOOL=ON;-DVTK_USE_SYSTEM_HDF5:BOOL=ON;-DXDMF_BUILD_MPI:BOOL=ON;-DOSMESA_INCLUDE_DIR:PATH=${PREFIX}/include;-DOSMESA_LIBRARY:FILEPATH=${PREFIX}/lib/libOSMesa.so;-DOPENGL_INCLUDE_DIR:PATH=${PREFIX}/include;-DOPENGL_gl_LIBRARY:FILEPATH="";-DOPENGL_glu_LIBRARY:FILEPATH=${PREFIX}/lib/libGLU.so;-DOPENGL_xmesa_INCLUDE_DIR:PATH="";-DVTK_USE_X:BOOL=OFF"

CMAKE_EXE=`which cmake`
if [ ! -f "$CMAKE_EXE" ]; then
	CMAKE_EXE=cmake28
fi

$CMAKE_EXE -DCMAKE_BUILD_TYPE:STRING:=Release \
      -DENABLE_boost:BOOL=ON \
      -DENABLE_ffmpeg:BOOL=ON \
      -DENABLE_hdf5:BOOL=ON \
      -DENABLE_mpi:BOOL=ON \
      -DENABLE_osmesa:BOOL=ON \
      -DENABLE_python:BOOL=ON \
      -DENABLE_paraviewsdk:BOOL=ON\
      -DENABLE_paraview:BOOL=ON \
      -DPV_EXTRA_CMAKE_ARGS:STRING="${PV_EXTRA_ARGS}" \
      -DCPACK_PACKAGE_NAME:STRING=${ZCFD_PACKAGE_NAME} \
      -DENABLE_zcfd:BOOL=ON \
      -DZCFD_EXTRA_CMAKE_ARGS:STRING="${ZCFD_EXTRA_ARGS}" \
      ../zCFDSuperbuild

make -j1

# Install setuptools
wget --no-check-certificate https://bootstrap.pypa.io/ez_setup.py -O - | install/bin/python
# Install pip
wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py -O - | install/bin/python
# Install yolk
install/bin/pip install yolk

# Install requirements
install/bin/pip install -r ../zCFDSuperbuild/requirements.txt
# If CUDA present install pycuda
if [ -f "$CUDA_COMPILER" ]; then
	install/bin/pip install pycuda==2014.1
fi

# Always install the intel compiler redistributable libraries
wget http://packages.zenotech.com/l_ccompxe_2015.0.090_redist.tgz
tar xvf l_ccompxe_2015.0.090_redist.tgz
pushd l_ccompxe_2015.0.090_redist
./install.sh --eula --install-path ../install/intel
popd

CPACK_EXE=`which cpack`
if [ ! -f "$CPACK_EXE" ]; then
	CPACK_EXE=cpack28
fi

# Package
$CPACK_EXE -G TGZ # --debug --verbose
